
@model NatDMS.Models.Product
@{
    ViewData["Title"] = "Create";
}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NatDMS</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-r5ID+CgK5ba4ZL3a39OXhMWSktQOp6cJS7wePqOx6bSSUnQlmh/jQ9vS9z5+X68+H" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha384-KyZXEAg3QhqLMpG8r+Knujsl7/7hb6k4Vib3z0lM9P5VFGjtBfM6f3nHU3QdvgpK" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12lFHTFxcPv2FXGjp5QZOkE5fBM6fZn5ySoHP53D5vq6KBwg" crossorigin="anonymous"></script>
</head>

<body>
    <div class="container">
        <hr />
        <div class="row justify-content-center">
            <div class="col-md-8">
                <form enctype="multipart/form-data" asp-action="Create" asp-controller="Product" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Category" class="control-label"></label>
                                @Html.DropDownListFor(model => model.Category, new SelectList(Model.Categorylist, "Id", "CategoryName"), "--Select Category--", new { @id = "state", onchange = "statechange()", @class = "form-select" })
                                <span asp-validation-for="Category" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="ProductName" class="control-label"></label>
                                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", placeholder = "Enter Product Name", onfocus = "movePlaceholder(this)" })
                                <span asp-validation-for="ProductName" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Price" class="control-label"></label>
                                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", placeholder = "Enter Price", onfocus = "movePlaceholder(this)" })
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Quantity" class="control-label"></label>
                                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", placeholder = "Enter Quantity", onfocus = "movePlaceholder(this)" })
                                <span asp-validation-for="Quantity" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Weight" class="control-label"></label>
                                @Html.TextBoxFor(model => model.Weight, new { @class = "form-control", placeholder = "Enter Weight", onfocus = "movePlaceholder(this)" })
                                <span asp-validation-for="Weight" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="ProductType" class="control-label"></label>
                                @Html.DropDownListFor(model => model.ProductType, Enumerable.Empty<SelectListItem>(), "-- Select ProductType --", new { @id = "productType", @class = "form-select" })
                            </div>


                            <div class="form-group">
                                <label asp-for="UploadImage" class="control-label">Choose Image </label>
                                <input asp-for="UploadImage" class="form-control custom-file-input" type="file" id="fileInput" onchange="return ShowImagePreview(this)">
                                <span asp-validation-for="UploadImage" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="imagePreviewContainer" style="display:none;">
                                <img src="#" alt="preview" id="imagePreview" style="border: 1px solid red; height: 169px; width: 176px; margin: auto; display: block;" />
                            </div>
                        </div>
                    </div>

                    <div class="form-group d-flex justify-content-center">
                        <button type="submit" class="btn btn-outline-danger">SUBMIT</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
        <script>function ShowImagePreview(input) {
                if (input.files && input.files[0]) {
                    var fname = input.files[0].name;
                    var re = /(\.jpg|\.jpeg|\.bmp|\.gif|\.png)$/i;
                    if (!re.exec(fname)) {
                        alert("Image not supported!");
                        $("#fileInput").val("");
                        $("#imagePreviewContainer").hide();
                        return false;
                    }
                    else {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $('#imagePreview').prop('src', e.target.result);
                        };
                        reader.readAsDataURL(input.files[0]);
                        $("#imagePreviewContainer").show();
                    }
                }
            }</script>
    </div>

    <div class="text-center py-1">
        <a href="@Url.Action("DisplayProduct")" class="d-flex align-items-center">
            <i class="material-icons" style="font-size:20px;">arrow_back</i>
            <span class="ml-2" style="font-weight: bold;">BACK TO LIST</span>
        </a>
    </div>
    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
    <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.5.1.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.19.2/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate.unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#ProductName').on('keypress', function (e) {
                var keyCode = e.which || e.keyCode;
                // Allow letters and space only
                if (!(keyCode >= 65 && keyCode <= 90) && // A-Z
                    !(keyCode >= 97 && keyCode <= 122) && // a-z
                    keyCode !== 32) { // Space
                    e.preventDefault();
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#Price, #Quantity, #Weight').on('keypress', function (e) {
                var keyCode = e.which || e.keyCode;
                var value = $(this).val();
                var isNumber = keyCode >= 48 && keyCode <= 57;
                var isDot = keyCode === 46;

                if (!isNumber && !isDot || (isDot && value.includes('.'))) {
                    e.preventDefault();
                }
            });

            $('#Price').on('input', function () {
                var value = $(this).val();
                var newValue = value.replace(/[^0-9.,]/g, '').replace(/,/g, '');
                var parts = newValue.split('.');
                if (parts.length > 2) {
                    newValue = parts[0] + '.' + parts.slice(1).join('');
                }
                if (parts[0].length > 5) {
                    parts[0] = parts[0].substring(0, 10);
                    newValue = parts.join('.');
                }
                $(this).val(newValue);
            });

            $('#Quantity').on('input', function () {
                var value = $(this).val();
                var newValue = value.replace(/[^0-9.]/g, '');
                var parts = newValue.split('.');
                if (parts.length > 2) {
                    newValue = parts[0] + '.' + parts.slice(1).join('');
                }
                if (parts[0].length > 5) {
                    parts[0] = parts[0].substring(0, 5);
                    newValue = parts.join('.');
                }
                $(this).val(newValue);
            });

            $('#Weight').on('input', function () {
                var value = $(this).val();
                var newValue = value.replace(/[^0-9.]/g, '');
                var parts = newValue.split('.');
                if (parts.length > 2) {
                    newValue = parts[0] + '.' + parts.slice(1).join('');
                }
                if (parts[0].length > 5) {
                    parts[0] = parts[0].substring(0, 5);
                }
                if (parts.length > 1 && parts[1].length > 3) {
                    parts[1] = parts[1].substring(0, 3);
                }
                $(this).val(parts.join('.'));
            });
        });
        $(document).ready(function () {
            $.ajax({
                url: '/Product/DisplayProductType',
                type: 'GET',
                success: function (data) {
                    var productTypeDropdown = $('#productType');
                    productTypeDropdown.empty(); // Clear existing options
                    productTypeDropdown.append('<option value="">-- Select ProductType --</option>');
                    $.each(data, function (index, productType) {
                        productTypeDropdown.append('<option value="' + productType.id + '">' + productType.productTypeName + '</option>');
                    });
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching product types:', error);
                }
            });
        });




    </script>

</body>
</html>
