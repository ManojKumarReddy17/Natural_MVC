@model NatDMS.Models.AreaViewModel
@{
    ViewData["Title"] = "DisplayAreas";
    string defaultStateId = "stn1";
    string cityId = "ctn1";
}
<h1>DisplayAreas</h1>
<head>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<p>
    @* <a asp-action="Create">Create New</a>*@
    <div class="d-flex justify-content-between align-items-center">
        <div class="text-center">
            <!-- Your existing content here -->
        </div>
        <div class="text-center">
            <a href="@Url.Action("CreateArea")" class="d-flex align-items-center">
                <i class="material-icons"></i>
                <b><span style="font-weight:bold;">CREATE NEW</span></b>
            </a>
        </div>
    </div>
</p>
<div class="row">
    <div class="col-md-2">
        <div class="form-group">
            <b>
                @Html.LabelFor(model => model.State)
                @Html.DropDownListFor(model => model.State, new SelectList(Model.StateList, "Id", "StateName", defaultStateId),
                "--select State--", new { @id = "state", onchange = "statechange()", @class = "form-select" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </b>
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <b>
                @Html.LabelFor(model => model.City)
                @Html.DropDownListFor(model => model.City, new SelectList(Model.CityList, "Id", "CityName"),
                "--Select City--", new { @id = "city", @class = "form-select", onchange = "citychange()" })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </b>
        </div>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                Area
            </th>
            <th>
                Edit
            </th>
            <th>
                Delete
            </th>
        </tr>
    </thead>
    <tbody id="areaTableBody">
        <!-- Area rows will be dynamically added here -->
    </tbody>
</table>
<!-- Pagination Controls -->
<div class="d-flex justify-content-between">
    <button id="prevPage" class="btn btn-primary" onclick="changePage(-1)">Previous</button>
    <span id="currentPage">1</span>
    <button id="nextPage" class="btn btn-primary" onclick="changePage(1)">Next</button>
</div>
<!-- Bootstrap Modal for Delete Confirmation -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Deletion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this area?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">NO</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">YES</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript">
    var currentPage = 1;
    var totalPageCount = 0;
    
    $(document).ready(function () {
        // Set default state and city IDs
        var defaultStateId = '@defaultStateId';
        var cityId = '@cityId';
        // Set default values in dropdowns
        $('#state').val(defaultStateId);
        $('#city').val(cityId);
        // Trigger state and city change
        statechange();
        citychange();

    });
    function statechange() {
        var stid = $('#state').val();
        if (stid.trim() != '') {
            var ddlcity = $('#city');
            ddlcity.empty();
            $.ajax(
                {
                    url: '/Area/GetCitiesByStateId',
                    type: 'GET',
                    dataType: 'json',
                    data: { stateId: stid },
                    success: function (d) {
                        ddlcity.append($("<option></option>").val('').html('-SelectCity-'));
                        $.each(d, function (i, cities) {
                            ddlcity.append($("<option>" + cities.cityName + "</option>").val(cities.id).html(cities.cityName));
                        });
                    },
                    error: function () {
                        alert('Error!');
                    }
                });
        }
    }
    function citychange() {
        var cityId = $('#city').val();
        console.log('CityId:', cityId); // Add log
        if (cityId !== '') {
            currentPage = 1;
            $('#currentPage').text(currentPage); // Update displayed page number
            
            loadAreas(currentPage);

            $.getJSON('/Area/GetAreasByCityId1', { CityId: cityId }, function (areas) {
                var areaTableBody = $('#areaTableBody');
                areaTableBody.empty();
                console.log('Areas:', areas); // Add log
                $.each(areas, function (index, Area) {
                    // Append a row for each city with edit and delete buttons
                    areaTableBody.append('<tr>' +
                        '<td>' + Area.areaName + '</td>' +
                        '<td><a href="/Area/EditArea/' + Area.id + '" class="btn btn-primary">Edit</a></td>' +
                        '<td><button onclick="openDeleteConfirmationModal(\'' + Area.id + '\')" class="btn btn-danger">Delete</button></td>' +
                        '</tr>');
                    console.log('Id:', Area.id); // Add log
                });
            });
        } else {
            $('#areaTableBody').empty();
            updatePaginationControls(0);
        }
    }
    
    
        function changePage(increment) {
            var newPage=currentPage+increment;
            if (newPage>=1 && newPage <=totalPageCount ) {
                currentPage = newPage;
            
        $('#currentPage').text(currentPage);
        loadAreas(currentPage);
            }
       
    }
   
    function loadAreas(page) {
        var cityId = $('#city').val();
        var url, ParamData;
        //var pageSize=10;
         $.getJSON('/Area/DisplayAreas1', { page: page, cityId: cityId }, function (areas) {
            var areaTableBody = $('#areaTableBody');
            areaTableBody.empty();
            console.log('Areas:', areas); // Add log
            var areaList = areas.areaList;
            totalPageCount=areas.totalPageCount;
            if (areaList.length === 0) {
                areaTableBody.append('<tr><td colspan="3">No areas found for the selected city.</td></tr>');
            } else
                $.each(areaList, function (index, area) {
                
                areaTableBody.append('<tr>' +
                    '<td>' + area.areaName + '</td>' +
                    '<td><a href="/Area/EditArea/' + area.id + '" class="btn btn-primary">Edit</a></td>' +
                    '<td><button onclick="openDeleteConfirmationModal(\'' + area.id + '\')" class="btn btn-danger">Delete</button></td>' +
                    '</tr>');
                
            });
            updatePaginationControls();
        });


    }
    function updatePaginationControls() {
        $('#prevPage').prop('disabled', currentPage <= 1);
        $('#nextPage').prop('disabled', currentPage >= totalPageCount);
    }


    function openDeleteConfirmationModal(id) {
        $('#confirmDeleteBtn').data('area-id', id);
        $('#deleteConfirmationModal').modal('show');
    }
    $(document).ready(function () {
        // Handle click event on the delete confirmation button
        $('#confirmDeleteBtn').click(function () {
            // Retrieve the city ID from the data attribute
            var id = $(this).data('area-id');
            // Implement your delete logic here, for example:
            $.ajax({
                url: '/Area/DeleteAreas/' + id, // Check this URL
                type: 'DELETE',
                success: function (result) {
                    console.log('Deletion successful:', result); // Add log
                    // Refresh city list after successful deletion
                    getStateCities();
                    // Hide the modal after successful deletion
                    $('#deleteConfirmationModal').modal('hide');
                },
                error: function (xhr, status, error) {
                    // Handle error
                    console.error('Error deleting area:', error); // Add log
                    // Hide the modal if there's an error
                    $('#deleteConfirmationModal').modal('hide');
                }
            });
        });
    });
</script>

