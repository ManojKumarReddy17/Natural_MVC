@model NatDMS.Models.NotificationViewmodel


@{
    ViewData["Title"] = "EditNotification";

}

<!DOCTYPE html>
<html lang="en">

<h1>Notify</h1>

<head>

    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/css/dm-project-style.css">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <link href="~/css/bootstrap-multiselect.css" rel="stylesheet" />
    <style>
        .email-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-family: Arial, sans-serif;
        }



        .email-body {
            display: flex;
        }

        .email-sidebar {
            flex: 1;
            padding: 10px;
        }

        .email-content {
            flex: 3;
            padding: 10px;
        }

        .email-form label {
            display: block;
            margin-bottom: 10px;
        }

        .email-form input,
        .email-form select,
        .email-form textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .email-form .btn-primary {
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .email-form .btn-primary:hover {
                background-color: #0056b3;
            }

        .text-danger {
            color: #dc3545;
        }

        .form-select {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #fff;
            font-size: 16px;
            color: #495057;
            display: flex;
        }

        .scrollable-checkboxes {
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #ccc;
            padding: 10px;
        }

        .CheckBox input {
            width: 15%;
            font-size: 18px;
        }

        .CheckBox label {
            display: inline;
            font-size: 16px;
        }

        .checkbox-custom {
            transform: scale(1.2); /* Adjust the scale factor as needed */
        }
    </style>
  


    <scrit scr="~/css/bootstrap-multiselect.js "></scrit>

</head>

<body>

    @using (Html.BeginForm("EditNotification", "NotificationDistributor", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))

    {

        <div class="email-container">


            <div class="email-body">
                <div class="email-sidebar">
                </div>

                <div class="email-content">
                    <div class="email-form">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="form-group">
                            <div>

                                @Html.LabelFor(model => model.Executive)
                                <div id="executive-container" class="scrollable-checkboxes">
                                    @foreach (var executive in Model.ExecutiveList.OrderBy(e => e.Executive))
                                    {
                                        <div class="form-check CheckBox">
                                            <input class="checkbox-custom" type="checkbox" id="executive_@executive.Id"                    name="Executive" value="@executive.Id"
                                            @(Model.Executive != null && Model.Executive.Contains(executive.Id.ToString()) ?              "checked" : "") />
                                            <label class="form-check-label"for="executive_@executive.Id">                                 @executive.Executive</label>
                                        </div>
                                    }
                                </div>
                                @Html.ValidationMessageFor(model => model.Executive, "", new { @class = "text-danger" })

                            </div>

                            <div>

                                @Html.LabelFor(model => model.Distributor)
                                <div id="Distributor-container" class="scrollable-checkboxes">
                                    @foreach (var distributor in Model.DistributorList.OrderBy(e => e.DistributorName))
                                    {
                                        <div class="form-check CheckBox">
                                            <input class="checkbox-custom" type="checkbox" id="distributor_@distributor.Id"               name="Distributor" value="@distributor.Id"
                                            @(Model.Distributor != null && Model.Distributor.Contains(distributor.Id.ToString             ()) ? "checked" : "") />
                                            <label class="form-check-label" for="distributor_@distributor.Id">                            @distributor.DistributorName </label>     
                                        </div>
                                    }
                                </div>
                                @Html.ValidationMessageFor(model => model.Distributor, "", new { @class = "text-danger" })

                            </div>
                            <label>
                                Subject:
                                @Html.TextBoxFor(model => model.Subject)
                            </label>
                            <label>
                                Body:
                                @Html.TextAreaFor(model => model.Body, new { rows = "15", cols = "25" })
                            </label>
                        </div>

                        @Html.HiddenFor(model => model.Id)
                        <div class="text-center">
                            <button type="submit" class="btn btn-outline-danger">SUBMIT</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</body>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

</html>