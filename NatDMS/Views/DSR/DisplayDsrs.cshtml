@model NatDMS.Models.DSRViewModel

@{
    ViewData["Title"] = "DisplayDsrs";
}

<!DOCTYPE html>
<html lang="en">


<head>

    <h1>DisplayDsrs</h1>



    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/css/dm-project-style.css">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <script src="~/js/jquery-3.6.0.min.js"></script>



    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>







    <script type="text/javascript">function executivechange() {
            var exid = $('#executive').val();
            if (exid.trim() != '') {
                var ddldis = $('#distributor');

                ddldis.empty();

                $.ajax(
                    {
                        url: "/Dsr/GetDistributorByExecutiveId",
                        type: 'GET',
                        dataType: 'json',

                        data: { executiveId: exid },

                        success: function (d) {
                            ddldis.append($("<option></option>").val('').html('--Select Distributor--'));
                            $.each(d, function (i, distributors) {
                                ddldis.append($("<option>" + distributors.distributorName + "</option>").val(distributors.id).html(distributors.distributorName));
                            });
                        },
                        error: function () {
                            alert('Error!');
                        }
                    });
            }
        }


        function distributorchange() {

            var disid = $('#distributor').val();
            if (disid.trim() != '') {
                var ddlret = $('#retailor');
                
                ddlret.empty();

                $.ajax(
                    {
                        url: "/DSR/GetRetailorByDistributorId",
                        type: 'GET',
                        dataType: 'json',
                        data: { distributorId: disid },
                        success: function (d) {
                            ddlret.append($("<option></option>").val('').html('--Select Retailors--'));
                            $.each(d, function (i, retailors) {

                                ddlret.append($("<option>" + retailors.retailorName + "</option>").val(retailors.id).html(retailors.retailorName));
                            });
                        },
                        error: function () {
                            alert('Error!');
                        }
                    });
            }
        }







        //Date

        document.getElementById("StartDate").defaultValue = "YYYY-MM-DD";
        document.getElementById("EndDate").defaultValue = "YYYY-MM-DD";




        function Save() {
            

            var modelData = {
                Executive: $("#executive").val(),
                Retailor: $("#retailor").val(),
                Distributor: $("#distributor").val(),
                StartDate: $("#StartDate").val(),
                EndDate: $("#EndDate").val(),

            };



            // Custom replacer function to include null values
            var jsonString = JSON.stringify(modelData, function (key, value) {
                // Include null values
                return value === undefined ? null : value;
            });

            $.ajax({
                url: "/DSR/DsrSearchProduct",
                type: "POST",
                data: jsonString,
                processData: false,
                contentType: "application/json",
                success: function (response) {
                    let result = JSON.stringify(response);
                    $("#Productlist TBODY").empty();
                    // Append new rows based on the response
                    $.each(response, function (i, ds) {


                            var anchorTag = '<a href="' + '@Url.Action("Edit", new { dsrid = "replaceme" })'.replace("replaceme", ds.id) + '" style="text-decoration: none; display: inline-block; color: orange;">' +
                    '<i class="material-icons">edit</i>' +
                                '</a>';

                        var details = '<a href="@Url.Action("Details", new { dsrid = "replaceme" })'.replace("replaceme", ds.id)+'" style="text - decoration: none; display: inline - block; color: green; ">'+
                            '<i class="material-icons">info</i>' + '</a>';

                             // Construct the delete icon and confirmation modal HTML string
    var deleteContent = '<a href="@Url.Action("Delete", new { dsrid = "replaceme" })'.replace("replaceme", ds.id)+'" style="text - decoration: none; display: inline - block; color: red; ">'+
                            '<i class="material-icons">delete</i>' + '</a>';



                             // Construct the delete icon and confirmation modal HTML string



                        var deleteContentnotification =

                            '<div style="display: flex; justify-content: center; align-items: center;">' +

                            '<i onclick="confirmDelete(\'' + ds.id + '\', true)" class="material-icons" style="color: red;cursor: pointer;">delete</i>' +
                            '</div>' +
                            '<div id="deleteConfirmationModal_' + ds.id + '" class="modal" role="dialog">' +
                            '<div class="modal-dialog">' +
                            '<div class="modal-content">' +
                            '<div class="modal-header">' +
                            '<h5 class="modal-title">Delete Confirmation</h5>' +
                            '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
                            '<span aria-hidden="true">&times;</span>' +
                            '</button>' +
                            '</div>' +
                            '<div class="modal-body">' +
                            '<p>Are you sure you want to delete this item?</p>' +
                            '</div>' +
                            '<div class="modal-footer">' +
                            '<button type="button" class="btn btn-secondary" onclick="confirmDelete(\'' + ds.id + '\', false)">No</button>' +
                            '<form id="deleteForm_' + ds.id + '" action="/DSR/Deletedsr" method="post">' +
                            '<input type="hidden" name="dsrId" value="' + ds.id + '" />' +
                            '<button type="submit" class="btn btn-danger">Yes</button>' +
                            '</form>' +
                            '</div>' +
                            '</div>' +
                            '</div>' +
                            '</div>';




                        $("#Productlist").append(
                            '<tr>' +
                            '<td>' + ds.executive + '</td>' +
                            '<td>' + ds.distributor + '</td>' +
                            '<td>' + ds.retailor + '</td>' +
                            '<td>' + ds.orderBy + '</td>' +
                            '<td>' + ds.totalAmount + '</td>' +
                            '<td>' + anchorTag + '</td>' +
                            '<td>' + details + '</td>' +

                            '<td>' + deleteContentnotification + '</td>' +

                            '</tr>'
                        );
                    });
                },
                error: function (request, status, error) {
                    alert(request.responseText);
                }
            });
        }



        //-------------SCRIPT FOR DELETE POPUP------------//

        function confirmDelete(uniqueId, isTrue) {
            var deleteSpan = 'deleteSpan_' + uniqueId;
            var confirmDeleteSpan = 'confirmDeleteSpan_' + uniqueId;

            if (isTrue) {
                $('#' + deleteSpan).hide();
                $('#' + confirmDeleteSpan).show();
                showModal(uniqueId);
            } else {
                $('#' + deleteSpan).show();
                $('#' + confirmDeleteSpan).hide();
                hideModal(uniqueId);
            }
        }
        function showModal(uniqueId) {
            var modal = $('#deleteConfirmationModal_' + uniqueId);
            modal.modal('show');
        }

        function hideModal(uniqueId) {
            var modal = $('#deleteConfirmationModal_' + uniqueId);
            modal.modal('hide');
        }


    </script>


</head>

<body>
    <p>
        <div class="d-flex justify-content-between align-items-center">
            <div class="text-center">
            </div>
            <a href="@Url.Action("CreateDsr")" class="d-flex align-items-center">
                @*<i class="material-icons">add</i>*@
                @*<i class="material-icons">add</i>*@
                <i class="material-icons">list_alt</i>



                <b><span style="font-weight:bold;">CREATE DSR</span></b>
            </a>
        </div>

    </p>







    <div class="form-group">
        <style>
            .form-group {
                display: flex;
                justify-content: space-between;
            }

                .form-group b {
                    width: 30%;
                    box-sizing: border-box;
                }
        </style>

        <b>
            @Html.LabelFor(model => model.Executive)
            @Html.DropDownListFor(model => model.Executive, new SelectList(Model.ExecutiveList, "Id", "Executive"),
                                                    "--Select Executive--", new { @id = "executive", onchange = "executivechange()", @class = "form-select" })

            @Html.HiddenFor(model => model.ExecutiveList, new { id = "executiveListHidden" })

        </b>
        <b>
            @Html.LabelFor(model => model.Distributor)
            @Html.DropDownListFor(model => model.Distributor, new List<SelectListItem>
                                                        {
        new SelectListItem { Text = "", Value = "" }
        }, new { @id = "distributor", onchange = "distributorchange()", @class = "form-select" })

        </b>
        <b>
            @Html.LabelFor(model => model.Retailor)
            @Html.DropDownListFor(model => model.Retailor, new List<SelectListItem>
                                                        {
        new SelectListItem { Text = "", Value = "" }
        }, new { @id = "retailor", @class = "form-select" })

        </b>


        <b>
            @Html.LabelFor(model => model.StartDate)
            <input type="date" id="StartDate" name="StartDate" class="datepicker">
            @Html.LabelFor(model => model.EndDate)
            <input type="date" id="EndDate" name="EndDate" class="datepicker">

        </b>
        <div class="col-md-2">
            <div class="form-group">
                <button type="submit" class="btn btn-secondary my-4" onclick="Save()">
                    <i class="material-icons" style="font-size:20px;display:flex;justify-content:center;
                                  align-items:center;">search</i>
                </button>

            </div>
        </div>

    </div>


    <table class="table table-bordered table-striped " id="Productlist">
        
        <thead class="table-light">
            <tr>

                <th>Executive</th>
                <th>Distributor</th>
                <th>Retailor</th>
                <th>OrderBy</th>

                <th>TotalAmount</th>
                <th>Edit</th>
                <th>Details</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.dsr)
            {
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.Executive, new { @id = "executive" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Distributor, new { @id = "distributor" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Retailor, new { @id = "distributor" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderBy, new { @id = "orderBy" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalAmount, new { @id = "totalAmount" })
                    </td>
                    <td>

                        <a href="@Url.Action("Edit", new { dsrid = item.Id })" style="text-decoration: none; display: inline-block; color: orange;">
                            <i class="material-icons">edit</i>
                        </a>

                    </td>
                    <td>
                        <a href="@Url.Action("Details", new { dsrid = item.Id })" style="text-decoration: none; display: inline-block; color:green;">
                            <i class="material-icons">info</i>
                        </a>
                    </td>



                    <td>
                        <!-- Delete Icon -->
                        <div style="display: flex; justify-content: center; align-items: center;">
                            <i onclick="confirmDelete('@item.Id', true)" class="material-icons" style="color: red;cursor: pointer;">delete</i>
                        </div>

                        <!-- Delete Confirmation Modal -->
                        <div id="deleteConfirmationModal_@item.Id" class="modal" role="dialog">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Delete Confirmation</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <p>Are you sure you want to delete this item?</p>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" onclick="confirmDelete('@item.Id', false)">No</button>
                                        @using (Html.BeginForm("Deletedsr", "DSR", new { dsrId = item.Id }, FormMethod.Post))
                                        {
                                            <button type="submit" class="btn btn-danger">Yes</button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    </td>

                </tr>
            }
        </tbody>
    </table>
</body>
</html>
